//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MathService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tuple", Namespace="http://schemas.datacontract.org/2004/07/MathService")]
    public partial class Tuple : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double[] DataField;
        
        private string NameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] Data
        {
            get
            {
                return this.DataField;
            }
            set
            {
                this.DataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IMath")]
public interface IMath
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMath/Prime", ReplyAction="http://tempuri.org/IMath/PrimeResponse")]
    bool Prime(int value);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMath/Prime", ReplyAction="http://tempuri.org/IMath/PrimeResponse")]
    System.Threading.Tasks.Task<bool> PrimeAsync(int value);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMath/Add", ReplyAction="http://tempuri.org/IMath/AddResponse")]
    MathService.Tuple Add(MathService.Tuple tuple);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMath/Add", ReplyAction="http://tempuri.org/IMath/AddResponse")]
    System.Threading.Tasks.Task<MathService.Tuple> AddAsync(MathService.Tuple tuple);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMath/SolveLinearSystem", ReplyAction="http://tempuri.org/IMath/SolveLinearSystemResponse")]
    double[] SolveLinearSystem(int numEquations, double[][] coefficients, double[] constants);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMath/SolveLinearSystem", ReplyAction="http://tempuri.org/IMath/SolveLinearSystemResponse")]
    System.Threading.Tasks.Task<double[]> SolveLinearSystemAsync(int numEquations, double[][] coefficients, double[] constants);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IMathChannel : IMath, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class MathClient : System.ServiceModel.ClientBase<IMath>, IMath
{
    
    public MathClient()
    {
    }
    
    public MathClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public MathClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MathClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MathClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public bool Prime(int value)
    {
        return base.Channel.Prime(value);
    }
    
    public System.Threading.Tasks.Task<bool> PrimeAsync(int value)
    {
        return base.Channel.PrimeAsync(value);
    }
    
    public MathService.Tuple Add(MathService.Tuple tuple)
    {
        return base.Channel.Add(tuple);
    }
    
    public System.Threading.Tasks.Task<MathService.Tuple> AddAsync(MathService.Tuple tuple)
    {
        return base.Channel.AddAsync(tuple);
    }
    
    public double[] SolveLinearSystem(int numEquations, double[][] coefficients, double[] constants)
    {
        return base.Channel.SolveLinearSystem(numEquations, coefficients, constants);
    }
    
    public System.Threading.Tasks.Task<double[]> SolveLinearSystemAsync(int numEquations, double[][] coefficients, double[] constants)
    {
        return base.Channel.SolveLinearSystemAsync(numEquations, coefficients, constants);
    }
}
